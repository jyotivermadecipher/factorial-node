{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\n  <span class=\\\"title-center\\\">Factorial Of A Number</span>\\n</mat-toolbar>\\n\\n\\n  <mat-card>\\n\\n    <form [formGroup]=\\\"factorialForm\\\">\\n      <mat-card-content>\\n        <mat-form-field>\\n          <mat-label> Enter Number</mat-label>\\n          <input matInput type=\\\"number\\\" formControlName = \\\"number\\\">\\n          <mat-error *ngIf=\\\"factorialForm.controls.number.errors?.required\\\">\\n            Number is required\\n          </mat-error>\\n        </mat-form-field>\\n\\n\\n      </mat-card-content>\\n    </form>\\n    <mat-card-actions>\\n      <button  style=\\\"background-color: #a8cbcc\\\" mat-button (click)=\\\"calculateFactorial()\\\">Calculate Factorial</button> &nbsp;\\n    </mat-card-actions>\\n\\n  <mat-label *ngIf=\\\"showFactorial\\\">Factorial Is {{factorial}}</mat-label>\\n  </mat-card>\\n\\n\\n\"","module.exports = \".mat-card {\\n  width: 450px;\\n  margin: auto; }\\n\\n.title-center {\\n  -webkit-box-flex: 1;\\n          flex: 1 1 auto;\\n  text-align: center; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9ob21lL2R6LWdnLTA3L0RaL1Rlc3RUYXNrL2ZhY3RvcmlhbC1uZy9zcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVc7RUFDWCxZQUFZLEVBQUE7O0FBR2Q7RUFDRSxtQkFBYztVQUFkLGNBQWM7RUFDZCxrQkFBa0IsRUFBQSIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZHtcbiAgd2lkdGg6NDUwcHg7XG4gIG1hcmdpbjogYXV0bztcbn1cblxuLnRpdGxlLWNlbnRlciB7XG4gIGZsZXg6IDEgMSBhdXRvO1xuICB0ZXh0LWFsaWduOiBjZW50ZXI7XG59XG4iXX0= */\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, Validators} from '@angular/forms';\nimport {FactorialService} from './app.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  constructor( private fb: FormBuilder, private factorialService: FactorialService){}\n  factorialForm;\n  factorial;\n  showFactorial: boolean;\n  ngOnInit(): void {\n    this.factorialForm = this.fb.group({\n      number: ['' , Validators.required ],\n    });\n    this.showFactorial = false;\n  }\n\n  calculateFactorial()\n  {\n    console.log(this.factorialForm);\n    if(this.factorialForm.valid)\n    {\n      let data = this.factorialForm.controls.number.value;\n      this.factorialService.calculatefactorial(data).subscribe( res =>{\n        this.factorial = res.factorial;\n        this.showFactorial = true;\n      });\n    }\n    else {\n      this.factorialForm.controls.number.markAsTouched();\n    }\n      // this.factorialForm.calculateFactorial()\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport {MatCardModule, MatFormFieldModule, MatInputModule, MatToolbarModule} from '@angular/material';\nimport {ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    MatToolbarModule,\n    ReactiveFormsModule,\n    MatCardModule,\n    MatFormFieldModule,\n    HttpClientModule,\n    MatInputModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {environment} from '../environments/environment';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FactorialService {\n  constructor(private http: HttpClient) {\n  }\n\n  calculatefactorial(data): Observable<any> {\n    return this.http.get(environment.apiUrl + 'getFactorial?number=' + data);\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiUrl: window.location.href\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}